name: Go Cross-build & Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.2"

      - name: Build for Linux
        run: |
          mkdir -p dist
          env CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -trimpath -ldflags -extldflags=-static -o dist/app-linux-amd64 cmd/main.go

      - name: Build for macOS
        run: |
          env CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -trimpath -ldflags -extldflags=-static -o dist/app-darwin-amd64 cmd/main.go
          env CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -trimpath -ldflags -extldflags=-static -o dist/app-darwin-arm64 cmd/main.go

      - name: Build for Windows
        run: |
          env CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -trimpath -ldflags -extldflags=-static -o dist/app-windows-amd64.exe cmd/main.go

      # - name: Build for Android
      #   run: |
      #     env CGO_ENABLED=0 GOOS=android GOARCH=arm64 go build -trimpath -ldflags -extldflags=-static -o dist/app-android-arm64 cmd/main.go
      #     env CGO_ENABLED=0 GOOS=android GOARCH=arm go build -trimpath -ldflags -extldflags=-static -o dist/app-android-armv7 cmd/main.go
      #     env CGO_ENABLED=0 GOOS=android GOARCH=386 go build -trimpath -ldflags -extldflags=-static -o dist/app-android-386 cmd/main.go
      #     env CGO_ENABLED=0 GOOS=android GOARCH=amd64 go build -trimpath -ldflags -extldflags=-static -o dist/app-android-amd64 cmd/main.go

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
